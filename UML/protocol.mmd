sequenceDiagram
    participant Network as Network
    participant Node0 as Node 0
    participant Node1 as Node 1
    participant Noden as Node n
    
    Note over Network: Initialize with n nodes sharing the same blockchain
    
    Network->>Network: generate_random_transactions(count)
    
    Note over Network,Noden: Consensus Round Begins
    
    %% Block Creation Phase
    Network->>+Node0: create_candidate_block()
    Network->>+Node1: create_candidate_block()
    Network->>+Noden: create_candidate_block()
    
    Note over Node0: Generate quantum nonce using<br/>generate_verifiable_nonce()
    Note over Node1: Generate quantum nonce using<br/>generate_verifiable_nonce()
    Note over Noden: Generate quantum nonce using<br/>generate_verifiable_nonce()
    
    Node0-->>-Network: candidate block
    Node1-->>-Network: candidate block
    Noden-->>-Network: candidate block
    
    %% Quantum State Preparation Phase
    Network->>+Node0: prepare_quantum_state()
    Network->>+Node1: prepare_quantum_state()
    Network->>+Noden: prepare_quantum_state()
    
    Note over Node0: Create statevector using<br/>create_block_quantum_state()
    Note over Node1: Create statevector using<br/>create_block_quantum_state()
    Note over Noden: Create statevector using<br/>create_block_quantum_state()
    
    Node0-->>-Network: quantum statevector 0
    Node1-->>-Network: quantum statevector 1
    Noden-->>-Network: quantum statevector n
    
    %% Consensus Phase
    Network->>+Node0: perform_consensus_round(all_states)
    
    Note over Node0: Calculate fidelities between all states<br/>using calculate_fidelity()
    Note over Node0: Determine agreement sets based on<br/>fidelity threshold
    Note over Node0: Select winner based on agreement set size
    
    Node0-->>-Network: winner_node_id
    
    %% Block Distribution Phase
    Note over Network: Get winning block from winner node
    
    Network->>Network: Add winning block to network blockchain
    
    Network->>+Node0: receive_block(winning_block)
    Network->>+Node1: receive_block(winning_block)
    Network->>+Noden: receive_block(winning_block)
    
    Node0-->>-Network: update success
    Node1-->>-Network: update success
    Noden-->>-Network: update success
    
    Note over Network: Verify blockchain consistency across nodes
    
    Note over Network,Noden: Consensus Round Complete